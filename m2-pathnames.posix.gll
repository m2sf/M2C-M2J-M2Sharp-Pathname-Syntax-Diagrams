/* M2C Modula-2 Compiler & Translator
 * Copyright (c) 2015 Benjamin Kowarsch
 *
 * @synopsis
 *
 * M2C is a compiler and translator for the classic Modula-2 programming
 * language as described in the 3rd and 4th editions of Niklaus Wirth's
 * book "Programming in Modula-2" (PIM) published by Springer Verlag.
 *
 * In compiler mode, M2C compiles Modula-2 source via C to object files or
 * executables using the host system's resident C compiler and linker.
 * In translator mode, it translates Modula-2 source to C source.
 *
 * Further information at http://savannah.nongnu.org/projects/m2c/
 *
 * @file
 *
 * m2-pathnames.posix.gll
 *
 * Grammar of POSIX portable pathnames.
 *
 * Alternatives may be enabled in header file m2-pathname-policy.h
 *
 * @license
 *
 * M2C is free software: you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License (LGPL) version 3
 * as published by the Free Software Foundation.
 *
 * M2C is distributed in the hope that it will be useful,  but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Read the license for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with m2c.  If not, see <https://www.gnu.org/copyleft/lesser.html>.
 */


grammar Pathnames;

/*** Non-Terminal Symbols ***/

/* Pathname */

pathname :=
  rootPath | ( '~' | '.' | parentPath ) rootPath? | filenameOnly
  ;


/* Root Path */

rootPath :=
  '/' ( pathComponent '/' )* pathComponent?
  ; 


/* Path Component */

pathComponent :=
  '.'? pathSubComponent ( '.' pathSubComponent )*
  ;


/* Path Sub-Component */

pathSubComponent :=
  ComponentLeadChar ComponentChar*
  ;

/* Alternative Path Sub-Component */

altPathSubComponent :=
  ComponentLeadChar ComponentChar* ( ' ' ComponentChar+ )
  ;


/* Parent Path */

parentPath :=
  '..' ( '/' '..' )*
  ;


/* Filename Only */

alias filenameOnly = pathComponent ;


/*** Terminal Symbols ***/

/* Path Component Character */

ComponentChar :=
  ComponentLeadChar | '-'
  ;

/* Alternative Path Component Character #1 */

AltComponentChar1 :=
  ComponentLeadChar | '-' | '~'
  ;

/* Alternative Path Component Character #2 */

AltComponentChar2 :=
  ComponentLeadChar | '-' | '^'
  ;

/* Alternative Path Component Character #3 */

AltComponentChar3 :=
  ComponentLeadChar | '-' | '~' | '^'
  ;


/* Path Component Lead Character */

ComponentLeadChar :=
  'a' .. 'z' | 'A' .. 'Z' | '0' .. '9' | '_'
  ;

endg Pathnames.

/* END OF FILE */